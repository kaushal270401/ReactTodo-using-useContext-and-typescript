{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\projects\\\\react-ts\\\\src\\\\Components\\\\newTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const inputRef = useRef(null);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enterText = inputRef.current.value;\n\n    if (enterText.trim().length === 0) {\n      alert('please enter a valid input');\n      return;\n    }\n\n    props.onAddTodo(enterText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NewTodo, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["React","useRef","NewTodo","props","inputRef","submitHandler","event","preventDefault","enterText","current","value","trim","length","alert","onAddTodo"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/projects/react-ts/src/Components/newTodo.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nconst NewTodo: React.FC<{onAddTodo:(text:string)=>void}> = (props) => {\r\n    const inputRef=useRef<HTMLInputElement>(null)\r\n\r\n\r\n    const submitHandler=(event:React.FormEvent)=>{\r\n        event.preventDefault();\r\n        const enterText =inputRef.current!.value\r\n\r\n        if(enterText.trim().length===0){\r\n            alert('please enter a valid input')\r\n            return;\r\n        }\r\n\r\n        props.onAddTodo(enterText)\r\n    }\r\n   \r\n\r\n  return( \r\n  <form onSubmit={submitHandler} > \r\n    <label htmlFor=\"text\">Task</label><br />\r\n    <input type=\"text\" id=\"text\" ref={inputRef} />\r\n    <button>Add todo</button>\r\n  </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;AAEA,MAAMC,OAAkD,GAAIC,KAAD,IAAW;EAAA;;EAClE,MAAMC,QAAQ,GAACH,MAAM,CAAmB,IAAnB,CAArB;;EAGA,MAAMI,aAAa,GAAEC,KAAD,IAAyB;IACzCA,KAAK,CAACC,cAAN;IACA,MAAMC,SAAS,GAAEJ,QAAQ,CAACK,OAAT,CAAkBC,KAAnC;;IAEA,IAAGF,SAAS,CAACG,IAAV,GAAiBC,MAAjB,KAA0B,CAA7B,EAA+B;MAC3BC,KAAK,CAAC,4BAAD,CAAL;MACA;IACH;;IAEDV,KAAK,CAACW,SAAN,CAAgBN,SAAhB;EACH,CAVD;;EAaF,oBACA;IAAM,QAAQ,EAAEH,aAAhB;IAAA,wBACE;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eACoC;MAAA;MAAA;MAAA;IAAA,QADpC,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAED;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAOD,CAxBD;;GAAMF,O;;KAAAA,O;AA0BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}